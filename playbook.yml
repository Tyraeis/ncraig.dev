- name: Deploy docker
  hosts: docker
  become: true

  tasks:
    - name: Install packages
      ansible.builtin.apt:
        name:
          - docker.io
          - python3-docker
          - docker-compose
          - apparmor

    - name: Create users
      ansible.builtin.user:
        name: "{{ item.key }}"
        password: "!"
        uid: "{{ item.value.uid }}"
        groups: "{{ item.value.groups | default([]) }}"
      loop: "{{ users | dict2items }}"

    - name: Write docker config files
      ansible.builtin.template:
        src: ./config/{{ item.path }}.j2
        dest: /home/docker/{{ item.path }}
        mode: "{{ item.mode }}"
      loop:
        - path: cloudflare.ini
          mode: '0400'
        - path: enable_certbot.sh
          mode: '0775'
        - path: ddclient.conf
          mode: '0400'

    - name: Write docker-compose.yml
      ansible.builtin.template:
        src: ./docker-compose.yml
        dest: /home/docker/docker-compose.yml
        mode: "0440"
      notify: Deploy docker

  handlers:
    - name: Deploy docker
      community.docker.docker_compose:
        project_src: /home/docker/
        restarted: true


- name: Configure openmediavault
  hosts: omv
  become: true

  tasks:
#    - name: Set OMV variables
#      ansible.builtin.lineinfile:
#        path: /etc/default/openmediavault
#        regexp: '^{{ item.key }}='
#        line: '{{ item.key }}="{{ item.value }}"'
#      loop: '{{ omv_vars | dict2items }}'
#      vars:
#        omv_vars:
#          OMV_NGINX_SITE_WEBGUI_SERVERNAME: '{{ local_hostname }}'
#          OMV_NGINX_SITE_WEBGUI_LISTEN_PARAMS: ' '
#      notify: Apply OMV config

    - name: Template nginx configs
      ansible.builtin.template:
        src: '{{ item }}'
        dest: '/{{ item | relpath }}'
        mode: "0444"
      with_fileglob:
        - 'etc/nginx/*'
        - 'etc/nginx/sites-available/*'
      notify: Restart nginx

    - name: Enable nginx sites
      ansible.builtin.file:
        src: /etc/nginx/sites-available/{{ item }}.conf
        dest: /etc/nginx/sites-enabled/{{ item }}.conf
        state: link
      loop:
        - omv
        - pihole
        - portainer
        - syncthing
      notify: Restart nginx

  handlers:
    - name: Apply OMV config
      ansible.builtin.shell: |
        monit restart omv-engined
        omv-salt stage run prepare
        omv-salt stage run deploy
      changed_when: true

    - name: Restart nginx
      ansible.builtin.shell: |
        nginx -s reload
      changed_when: true
